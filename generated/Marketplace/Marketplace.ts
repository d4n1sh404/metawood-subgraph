// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ListingClosed extends ethereum.Event {
  get params(): ListingClosed__Params {
    return new ListingClosed__Params(this);
  }
}

export class ListingClosed__Params {
  _event: ListingClosed;

  constructor(event: ListingClosed) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ListingCreated extends ethereum.Event {
  get params(): ListingCreated__Params {
    return new ListingCreated__Params(this);
  }
}

export class ListingCreated__Params {
  _event: ListingCreated;

  constructor(event: ListingCreated) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NFTBuy extends ethereum.Event {
  get params(): NFTBuy__Params {
    return new NFTBuy__Params(this);
  }
}

export class NFTBuy__Params {
  _event: NFTBuy;

  constructor(event: NFTBuy) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get listingId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UserSaved extends ethereum.Event {
  get params(): UserSaved__Params {
    return new UserSaved__Params(this);
  }
}

export class UserSaved__Params {
  _event: UserSaved;

  constructor(event: UserSaved) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get data(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Marketplace__getAllOpenListingsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get status(): i32 {
    return this[4].toI32();
  }
}

export class Marketplace__getLatestListingsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get status(): i32 {
    return this[4].toI32();
  }
}

export class Marketplace__getListingResultListingStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get status(): i32 {
    return this[4].toI32();
  }
}

export class Marketplace__getOpenListingsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get status(): i32 {
    return this[4].toI32();
  }
}

export class Marketplace__getUserResultValue0Struct extends ethereum.Tuple {
  get userId(): Address {
    return this[0].toAddress();
  }

  get data(): string {
    return this[1].toString();
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  getAllOpenListings(): Array<
    Marketplace__getAllOpenListingsResultValue0Struct
  > {
    let result = super.call(
      "getAllOpenListings",
      "getAllOpenListings():((uint256,address,uint256,uint256,uint8)[])",
      []
    );

    return result[0].toTupleArray<
      Marketplace__getAllOpenListingsResultValue0Struct
    >();
  }

  try_getAllOpenListings(): ethereum.CallResult<
    Array<Marketplace__getAllOpenListingsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllOpenListings",
      "getAllOpenListings():((uint256,address,uint256,uint256,uint8)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Marketplace__getAllOpenListingsResultValue0Struct>()
    );
  }

  getLatestListings(
    threshold: BigInt
  ): Array<Marketplace__getLatestListingsResultValue0Struct> {
    let result = super.call(
      "getLatestListings",
      "getLatestListings(uint256):((uint256,address,uint256,uint256,uint8)[])",
      [ethereum.Value.fromUnsignedBigInt(threshold)]
    );

    return result[0].toTupleArray<
      Marketplace__getLatestListingsResultValue0Struct
    >();
  }

  try_getLatestListings(
    threshold: BigInt
  ): ethereum.CallResult<
    Array<Marketplace__getLatestListingsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getLatestListings",
      "getLatestListings(uint256):((uint256,address,uint256,uint256,uint8)[])",
      [ethereum.Value.fromUnsignedBigInt(threshold)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Marketplace__getLatestListingsResultValue0Struct>()
    );
  }

  getListing(listingId: BigInt): Marketplace__getListingResultListingStruct {
    let result = super.call(
      "getListing",
      "getListing(uint256):((uint256,address,uint256,uint256,uint8))",
      [ethereum.Value.fromUnsignedBigInt(listingId)]
    );

    return changetype<Marketplace__getListingResultListingStruct>(
      result[0].toTuple()
    );
  }

  try_getListing(
    listingId: BigInt
  ): ethereum.CallResult<Marketplace__getListingResultListingStruct> {
    let result = super.tryCall(
      "getListing",
      "getListing(uint256):((uint256,address,uint256,uint256,uint8))",
      [ethereum.Value.fromUnsignedBigInt(listingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Marketplace__getListingResultListingStruct>(value[0].toTuple())
    );
  }

  getOpenListings(
    _user: Address
  ): Array<Marketplace__getOpenListingsResultValue0Struct> {
    let result = super.call(
      "getOpenListings",
      "getOpenListings(address):((uint256,address,uint256,uint256,uint8)[])",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toTupleArray<
      Marketplace__getOpenListingsResultValue0Struct
    >();
  }

  try_getOpenListings(
    _user: Address
  ): ethereum.CallResult<
    Array<Marketplace__getOpenListingsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getOpenListings",
      "getOpenListings(address):((uint256,address,uint256,uint256,uint8)[])",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Marketplace__getOpenListingsResultValue0Struct>()
    );
  }

  getOwnedTokens(_user: Address): Array<BigInt> {
    let result = super.call(
      "getOwnedTokens",
      "getOwnedTokens(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBigIntArray();
  }

  try_getOwnedTokens(_user: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getOwnedTokens",
      "getOwnedTokens(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getUser(userAddress: Address): Marketplace__getUserResultValue0Struct {
    let result = super.call("getUser", "getUser(address):((address,string))", [
      ethereum.Value.fromAddress(userAddress)
    ]);

    return changetype<Marketplace__getUserResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getUser(
    userAddress: Address
  ): ethereum.CallResult<Marketplace__getUserResultValue0Struct> {
    let result = super.tryCall(
      "getUser",
      "getUser(address):((address,string))",
      [ethereum.Value.fromAddress(userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Marketplace__getUserResultValue0Struct>(value[0].toTuple())
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get metawoodNftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddSupportedTokenCall extends ethereum.Call {
  get inputs(): AddSupportedTokenCall__Inputs {
    return new AddSupportedTokenCall__Inputs(this);
  }

  get outputs(): AddSupportedTokenCall__Outputs {
    return new AddSupportedTokenCall__Outputs(this);
  }
}

export class AddSupportedTokenCall__Inputs {
  _call: AddSupportedTokenCall;

  constructor(call: AddSupportedTokenCall) {
    this._call = call;
  }

  get tokenName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get tokenContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddSupportedTokenCall__Outputs {
  _call: AddSupportedTokenCall;

  constructor(call: AddSupportedTokenCall) {
    this._call = call;
  }
}

export class BuyNftCall extends ethereum.Call {
  get inputs(): BuyNftCall__Inputs {
    return new BuyNftCall__Inputs(this);
  }

  get outputs(): BuyNftCall__Outputs {
    return new BuyNftCall__Outputs(this);
  }
}

export class BuyNftCall__Inputs {
  _call: BuyNftCall;

  constructor(call: BuyNftCall) {
    this._call = call;
  }

  get listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyNftCall__Outputs {
  _call: BuyNftCall;

  constructor(call: BuyNftCall) {
    this._call = call;
  }
}

export class CloseListingCall extends ethereum.Call {
  get inputs(): CloseListingCall__Inputs {
    return new CloseListingCall__Inputs(this);
  }

  get outputs(): CloseListingCall__Outputs {
    return new CloseListingCall__Outputs(this);
  }
}

export class CloseListingCall__Inputs {
  _call: CloseListingCall;

  constructor(call: CloseListingCall) {
    this._call = call;
  }

  get listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseListingCall__Outputs {
  _call: CloseListingCall;

  constructor(call: CloseListingCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SaveUserCall extends ethereum.Call {
  get inputs(): SaveUserCall__Inputs {
    return new SaveUserCall__Inputs(this);
  }

  get outputs(): SaveUserCall__Outputs {
    return new SaveUserCall__Outputs(this);
  }
}

export class SaveUserCall__Inputs {
  _call: SaveUserCall;

  constructor(call: SaveUserCall) {
    this._call = call;
  }

  get data(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SaveUserCall__Outputs {
  _call: SaveUserCall;

  constructor(call: SaveUserCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
